<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>http://hechen0.com/posts/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 28 Mar 2018 19:30:42 +0800</lastBuildDate>
    
	<atom:link href="http://hechen0.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>xorm对于表名的缓存</title>
      <link>http://hechen0.com/posts/xorm%E5%AF%B9%E4%BA%8E%E8%A1%A8%E5%90%8D%E7%9A%84%E7%BC%93%E5%AD%98/</link>
      <pubDate>Wed, 28 Mar 2018 19:30:42 +0800</pubDate>
      
      <guid>http://hechen0.com/posts/xorm%E5%AF%B9%E4%BA%8E%E8%A1%A8%E5%90%8D%E7%9A%84%E7%BC%93%E5%AD%98/</guid>
      <description>最近碰到一个坑
golang中的orm库: xorm
如果不显示传入表名的话，xorm库可以根据你传入的struct主动调用定义的Tablename()方法去推断表名的。
但是这个表名是有缓存的，缓存的结构是map[reflect.Type]string，如果能读到缓存，不会调用Tablename()方法。
最近碰到的坑就是我们在业务层做了分表，导致不能依赖这种隐式推出表名的方法。
对于分表而言，传入的struct是相同的，所以reflect.Type也是相同的，所以只会在缓存不存在的时候调用Tablename()方法。</description>
    </item>
    
    <item>
      <title>Helloworld</title>
      <link>http://hechen0.com/posts/helloworld/</link>
      <pubDate>Thu, 26 Feb 2015 21:43:14 +0800</pubDate>
      
      <guid>http://hechen0.com/posts/helloworld/</guid>
      <description>Hello World</description>
    </item>
    
  </channel>
</rss>